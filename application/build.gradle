
plugins {
    id 'module-config'
    id 'spring-conventions'
    id "com.gorylenko.gradle-git-properties" version "2.4.1"
    id("org.owasp.dependencycheck") version "8.4.2"
    id "org.sonarqube" version "5.0.0.4638"
}
group = 'be.kdg.integration5'
version = '0.0.1-SNAPSHOT'
java {
    sourceCompatibility = '21'
    targetCompatibility = '21'
}
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}
repositories {
    mavenCentral()
}
gitProperties {
    extProperty = 'gitProps' // git properties will be put in a map at project.ext.gitProps
}
generateGitProperties.outputs.upToDateWhen { false } // make sure the generateGitProperties task always executes (even when git.properties is not changed)
task printGitProperties(dependsOn: 'generateGitProperties') { // make sure generateGitProperties task to execute before accessing generated properties
    doLast {
        println "git.commit.id.abbrev=" + project.ext.gitProps['git.commit.id.abbrev']
    }
}
springBoot {
    buildInfo()
}
dependencyCheck {
    suppressionFile = rootProject.file('suppression.xml')
    analyzers {
        assemblyEnabled = false
    }
    formats = [ "HTML", "XML" ]
}
ext {
    set('springCloudAzureVersion', "5.7.0")
}
dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    //Spring cloud AZURE
    implementation 'com.azure.spring:spring-cloud-azure-starter-actuator'
    implementation 'com.azure.spring:spring-cloud-azure-starter-keyvault'
    implementation 'com.azure.spring:spring-cloud-azure-starter'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    // Mapping library
    //annotation processor
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'


    implementation project(":common")
    implementation project(':platform')
    implementation project(':chatbot')
    implementation project(':player-statistics')
    implementation project(':recommender')
    implementation 'mysql:mysql-connector-java:8.0.33'

    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    implementation 'org.springframework.boot:spring-boot-starter-json'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-security:3.3.4'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

}


bootJar {
    enabled = true
}
jar {
    enabled = false
}

dependencyManagement {
    imports {
        mavenBom "com.azure.spring:spring-cloud-azure-dependencies:${springCloudAzureVersion}"
    }
}


bootBuildImage {
    builder = "paketobuildpacks/builder-jammy-base:latest"
    imageName = "acrbanditgamesplatform.azurecr.io/banditgames"
    tags = ["acrbanditgamesplatform.azurecr.io/banditgames-backend:${-> project.ext.gitProps['git.commit.id.abbrev']}"]
    publish = true
    docker {
        publishRegistry {
            username =  "acrbanditgamesplatform"
            password = "XHqKFM9npgVycTsyeOb0bOyshu6biMomIMsFdQdwUT+ACRAN0OB9"
        }
    }
}
bootBuildImage.dependsOn generateGitProperties
tasks.build.dependsOn bootBuildImage
tasks.named('test') {
    useJUnitPlatform()
}

tasks.named('bootBuildImage') {
    dependsOn tasks.named('jar')
}